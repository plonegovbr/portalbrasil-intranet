[project]
name = "plonegovbr.intranet"
description = "Solução de Intranet construída com Plone"
dynamic = ["version"]
authors = [
  { name = "PloneGov-BR", email = "gov@plone.org.br" },
]
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["Plone", "Python", "Intranet", "Brasil"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Web Environment",
  "Framework :: Plone",
  "Framework :: Plone :: Distribution",
  "Framework :: Plone :: 6.0",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
]
dependencies = [
  "plone.distribution>=2.0.0a1",
  "plone.api",
  "plone.app.upgrade",
  "plone.restapi",
  "plone.volto",
  "collective.volto.formsupport>=3.1.4",
  "collective.volto.otp",
  "collective.taxonomy",
  "collective.honeypot",
  "collective.bookmarks",
  "plone.exportimport>=1.0.0a8",
]

[project.urls]
Documentation = "https://github.com/plonegovbr/portalbrasil-intranet#readme"
Issues = "https://github.com/plonegovbr/portalbrasil-intranet/issues"
Source = "https://github.com/plonegovbr/portalbrasil-intranet"

[project.entry-points."z3c.autoinclude.plugin"]
target = "plone"

[tool.hatch.version]
path = "src/plonegovbr/intranet/about.py"

[tool.hatch.build]
strict-naming = false
packages = ["src/plonegovbr"]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.env]
requires = [
    "hatch-pip-compile"
]

[tool.hatch.envs.default]
type = "pip-compile"
path = ".venv"
pip-compile-resolver = "uv"
pip-compile-installer = "uv"
lock-filename = "requirements.lock"
pip-compile-args = [
    "--constraint",
    "constraints-mxdev.txt",
]
dependencies = [
  "coverage[toml]>=6.5",
  "hatch",
  "ruff",
  "i18ndude",
  "isort",
  "hatchling==1.24.2",
  "plone.app.testing",
  "plone.restapi[test]",
  "pytest-cov==5.0.0",
  "pytest-plone>=0.5.0",
  "pytest",
  "towncrier==23.11.0",
  "zpretty",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]
zpretty_lint = [
  "find src -name '*.xml'|xargs zpretty -x --check",
  "find src -name '*.zcml'|xargs zpretty -z --check",
]
zpretty_format = [
  "find src -name '*.xml'|xargs zpretty -x -i",
  "find src -name '*.zcml'|xargs zpretty -z -i",
]
lint = [
  "ruff check",
  "isort --check-only src/ tests/",
  "zpretty_lint"
]
format = [
  "ruff format",
  "isort src/ tests/",
  "zpretty_format"
]
i18n = [
  "python -m plonegovbr.intranet.locales.update"
]
changelog-draft = "towncrier --draft"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.coverage.run]
source_pkgs = ["plonegovbr.intranet", "tests"]
branch = true
parallel = true
omit = [
  "plonegovbr/intranet/locales/__init__.py",
  "plonegovbr/intranet/locales/update.py",
]

[tool.coverage.paths]
plonegovbr.intranet = ["src/plonegovbr/intranet"]
tests = ["tests",]

[tool.coverage.report]
skip_empty = true
show_missing = true
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.isort]
profile = "plone"

[tool.towncrier]
package = "plonegovbr.intranet"
package_dir = "src"
directory = "news/"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
title_format = "## {version} ({project_date})"
template = "news/.changelog_template.jinja"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking changes:"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Funcionalidade"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Correção de bug"
showcontent = true

[[tool.towncrier.type]]
directory = "internal"
name = "Interno"
showcontent = true

[[tool.towncrier.type]]
directory = "documentation"
name = "Documentação"
showcontent = true

[[tool.towncrier.type]]
directory = "tests"
name = "Teste"
showcontent = true

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
]
lint.ignore = [
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.format]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.codespell]
ignore-words-list = "discreet,vew"
skip = "*.po,*.min.js"

[tool.check-manifest]
ignore = [
    ".editorconfig",
    ".flake8",
    ".meta.toml",
    ".pre-commit-config.yaml",
    "dependabot.yml",
    "mx.ini",
]
